# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.46.1"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
    # increment_build_number

    # xctool # run the tests of your app
  end

  lane :prebuild do

    sh "cd .. && cp ./ProvisioningProfiles/* /Library/Developer/XcodeServer/ProvisioningProfiles/"

  end

  lane :provision do

    # ENV['SIGH_APP_IDENTIFIER'] = 'co.jo2.CoreNotes'
    ENV['SIGH_OUTPUT_PATH'] = './ProvisioningProfiles'
    # ENV['SIGH_USERNAME'] = "#{ENV['USER']}"
    ENV['SIGH_SKIP_CERTIFICATE_VERIFICATION'] = 'true' # https://github.com/KrauseFx/sigh/issues/141

    ENV['FL_PROJECT_PROVISIONING_PROJECT_PATH'] = 'CoreNotes.xcodeproj'
    ENV['FL_PROJECT_PROVISIONING_PROFILE_TARGET_FILTER'] = '^CoreNotes$' # exact match in regex, we don't want e.g. CoreNotesTests

    # create a folder for our provisioning profiles if not exists
    sh "cd .. && mkdir -p ProvisioningProfiles"

    # generate development profile
    profile_name = 'core_notes_dev'
    profile_file = "#{profile_name}.mobileprovision"
    profile_path = "./ProvisioningProfiles/#{profile_file}"
    udid_dev = sigh(
      provisioning_name: profile_name,
      filename: profile_file,
      development: true
    )

    # set the development profile in the project
    update_project_provisioning(
      profile: profile_path,
      build_configuration: 'Debug'
    )

    # generate appstore profile
    profile_name = 'core_notes_appstore'
    profile_file = "#{profile_name}.mobileprovision"
    profile_path = "./ProvisioningProfiles/#{profile_file}"
    udid_appstore = sigh(
      provisioning_name: profile_name,
      filename: profile_file
    )

    # set the appstore profile in the project
    update_project_provisioning(
      profile: profile_path,
      build_configuration: 'Release'
    )

  end

  desc "Runs all the tests"
  lane :test do
    snapshot
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    sigh
    gym # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    snapshot
    sigh
    gym # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
